name: vHive unit tests

on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'function-images/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'function-images/**'
  workflow_dispatch:

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        module: [taps, misc, profile]
    steps:

    - name: Set up Go 1.19
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        
    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Build setup scripts
      run: pushd scripts && go build -o vhive_setup && popd

    - name: Setup System
      run: ./scripts/vhive_setup setup_system

    - name: Install PMU tools
      run: ./scripts/vhive_setup install_pmutools

    - name: Build
      run: go build -race -v -a ./...

    - name: Run tests in submodules
      env:
          MODULE: ${{ matrix.module }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        make -C $MODULE test
        make -C $MODULE test-man
  
  firecracker-containerd-interface-test:
    name: "Unit tests: Firecracker-containerd interface"
    runs-on: [self-hosted, integ]
    steps:
    
    - name: Set up Go 1.19
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: Upgrade git
      run: |
        sudo add-apt-repository ppa:git-core/ppa -y
        sudo apt update
        sudo apt install git -y
        
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        lfs: true

    - name: Build setup scripts
      run: pushd scripts && go build -o vhive_setup && popd
    
    - name: Pull binaries
      run: ./scripts/vhive_setup setup_firecracker_containerd

    - name: Build
      run: go build -race -v -a ./...

    - name: Run tests in submodules
      run: |
        make -C ctriface test
        make -C ctriface test-man

    - name: Cleaning
      if: ${{ always() }}
      run: ./scripts/vhive_setup clean_fcctr
