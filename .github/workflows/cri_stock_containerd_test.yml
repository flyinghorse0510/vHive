name: stock Containerd CRI tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * *'

env:
  GOOS: linux
  GO111MODULE: on
  TMPDIR: /root/tmp/

jobs:
  stock-containerd-test:
    name: Stock Containerd test
    runs-on: [self-hosted, cri]

    steps:
    - name: Setup TMPDIR
      run: mkdir -p $TMPDIR

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up golang
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: Build setup scripts
      run: pushd scripts && go build -o setup_tool && popd

    - name: Start Containerd
      run: sudo containerd &

    - name: Create k8s cluster
      run: ./scripts/setup_tool create_one_node_cluster stock-only && sleep 2m

    - name: Deploy zipkin
      env:
        KUBECONFIG: /etc/kubernetes/admin.conf
      run: ./scripts/setup_tool setup_zipkin && sleep 5s

    - name: Create helloworld container
      run: KUBECONFIG=/etc/kubernetes/admin.conf kn service create helloworld-go --image gcr.io/knative-samples/helloworld-go --env TARGET="vHive CRI test"

    - name: Invoke the deployed function
      run: curl http://helloworld-go.default.192.168.1.240.sslip.io

    - name: Cleaning
      if: ${{ always() }}
      run: ./scripts/github_runner/clean_cri_runner.sh stock-only
